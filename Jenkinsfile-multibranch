pipeline {
    agent { 
        label 'linode-node'
         }
   
  
    options { buildDiscarder(logRotator(artifactDaysToKeepStr: '',
     artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '5'))
      disableConcurrentBuilds() }
      

    stages {

       stage('SonarQube analysis') {
            agent {
                docker {

                  image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
               }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }


          stage("Quality Gate") {
            steps {
              timeout(time: 3, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
     

stage('build ') {

            steps {
               sh '''
               cd $WORKSPACE/DEV
           docker build -t linsay1999/canary:${BUILD_NUMBER} .
               '''
            }
        }
       


    }
            

   post {
   
   success {
      slackSend (channel: '#aldevops', color: 'good', message: "SUCCESSFUL: CANARY Branch name  <<${env.BRANCH_NAME}>>  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

 
    unstable {
      slackSend (channel: '#aldevops', color: 'warning', message: "UNSTABLE: CANARY Branch name  <<${env.BRANCH_NAME}>>  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

    failure {
      slackSend (channel: '#aldevops', color: '#FF0000', message: "FAILURE:  CANARY Branch name  <<${env.BRANCH_NAME}>> Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }
   
    cleanup {
      deleteDir()
    }
}


    



    }





